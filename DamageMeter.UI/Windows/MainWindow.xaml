<ui:ClickThrouWindow x:Class="DamageMeter.UI.MainWindow"
                     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                     xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                     xmlns:ui="clr-namespace:DamageMeter.UI"
                     xmlns:l="clr-namespace:Lang;assembly=Lang"
                     xmlns:converters="clr-namespace:DamageMeter.UI.HUD.Converters"
                     xmlns:controls="clr-namespace:DamageMeter.UI.Controls"
                     xmlns:windows="clr-namespace:DamageMeter.UI.Windows"
                     mc:Ignorable="d"
                     UseLayoutRounding="True"
                     Title="{Binding WindowTitle}"
                     MinHeight="60" MinWidth="219"
                     Loaded="MainWindow_OnLoaded"
                     Closed="MainWindow_OnClosed"
                     MouseEnter="MainWindow_OnMouseEnter"
                     MouseLeave="MainWindow_OnMouseLeave"
                     d:DataContext="{d:DesignInstance ui:MainViewModel}">
    <Window.Resources>
        <converters:TransparencyToMarginConverter x:Key="BoolToMargin" />
        <Style TargetType="{x:Type ToolTip}">
            <Setter Property="Background" Value="#8F000000" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <TextBlock TextWrapping="Wrap" Text="{Binding}" MaxWidth="600" />
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                    x:Name="Border"
                    Grid.ColumnSpan="2"
                    CornerRadius="2"
                    Background="{TemplateBinding Background}"
                    BorderBrush="Transparent"
                    BorderThickness="1" />
                <Border
                    Grid.Column="0"
                    CornerRadius="2,0,0,2"
                    Margin="1"
                    Background="Transparent"
                    BorderBrush="Transparent"
                    BorderThickness="0,0,1,0" />
                <Path
                    x:Name="Arrow"
                    Grid.Column="1"
                    Fill="White"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true" />
                <Trigger Property="ToggleButton.IsChecked" Value="true" />
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style TargetType="FrameworkElement" x:Key="ImageButton">
            <Setter Property="Opacity" Value=".7" />
            <Setter Property="Cursor" Value="Hand" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Opacity" Value="1" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
            <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
        </ControlTemplate>


        <Style x:Key="ShinraContext" TargetType="{x:Type ContextMenu}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContextMenu}">
                        <Border Background="Black" x:Name="Border"
                                BorderThickness="0.5">
                            <Border.BorderBrush>
                                <SolidColorBrush Color="DarkGray" />
                            </Border.BorderBrush>
                            <StackPanel IsItemsHost="True"
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="HasDropShadow"
                                     Value="true" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type ComboBox}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}">
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                Template="{StaticResource ComboBoxToggleButton}"
                                Background="Transparent"
                                Focusable="false"
                                IsChecked="{Binding Path=IsDropDownOpen,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press" />
                            <ContentPresenter
                                Name="ContentSite"
                                IsHitTestVisible="False"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                Margin="3,3,23,3"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                                     Style="{x:Null}"
                                     Template="{StaticResource ComboBoxTextBox}"
                                     HorizontalAlignment="Left"
                                     VerticalAlignment="Center"
                                     Margin="3,3,23,3"
                                     Focusable="True"
                                     Background="Transparent"
                                     Visibility="Hidden"
                                     IsReadOnly="{TemplateBinding IsReadOnly}" />
                            <Popup
                                Name="Popup"

                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True"

                                Focusable="False"
                                PopupAnimation="Slide">
                                <Grid
                                    Name="DropDown"
                                    SnapsToDevicePixels="True"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                        x:Name="DropDownBorder"
                                        Background="Black"
                                        BorderThickness="1"
                                        BorderBrush="Transparent" />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True"
                                                    KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="ToggleButton" Property="Background" Value="#1fff" />

                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0" />
                                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- SimpleStyles: ComboBoxItem -->
        <Style TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Foreground" Value="White" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border
                            Name="Border"
                            Padding="2"
                            SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="Black" />
                                <Setter Property="BorderBrush" Value="White" />
                                <Setter Property="BorderThickness" Value="1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.Background>
        <SolidColorBrush Color="Transparent" Opacity="0" />
    </Window.Background>
    <Grid HorizontalAlignment="Left" MinWidth="265"
          Margin="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=AllowsTransparency, Converter={StaticResource BoolToMargin}}">
        <Grid.RowDefinitions>
            <RowDefinition Height="30" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid.LayoutTransform>
            <ScaleTransform CenterX="0" CenterY="0"
                            ScaleX="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=Scale}"
                            ScaleY="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ui:ClickThrouWindow}, Path=Scale}" />
        </Grid.LayoutTransform>
        <Border
            BorderBrush="{StaticResource KrBorderColor}" BorderThickness="1"
            Grid.RowSpan="6" x:Name="BackgroundBorder"
            Opacity="{Binding WindowOpacity}">

            <Border.Style>
                <Style BasedOn="{StaticResource MainBorder}" TargetType="Border">
                    <Setter Property="Background" Value="{StaticResource KrBgColor}" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding UserPaused}" Value="False" />
                                <Condition Binding="{Binding Paused}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background" Value="DarkRed" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
        </Border>
        <Grid Grid.Row="0" Name="EGrid" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="0" />
            </Grid.ColumnDefinitions>
            <ComboBox DropDownClosed="ListEncounter_OnDropDownClosed" DropDownOpened="ListEncounter_OnDropDownOpened"
                      SelectionChanged="ListEncounter_OnSelectionChanged"
                      x:Name="ListEncounter" HorizontalAlignment="Stretch"
                      Margin="0" VerticalAlignment="Top" MinWidth="205" Width="Auto"
                      HorizontalContentAlignment="Left"
                      MinHeight="29" Height="5" Grid.Column="0" />

        </Grid>
        <Grid Grid.Row="1" Name="SGrid" HorizontalAlignment="Stretch" Height="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Grid HorizontalAlignment="Left" Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Path Data="{StaticResource Svg.Timer}" HorizontalAlignment="Center" VerticalAlignment="Center"
                      Stretch="Uniform" Margin="5,0,0,0" Fill="#5fff" Height="16" />

                <Label Focusable="False" x:Name="Timer" HorizontalAlignment="Left" Grid.Column="1" FontSize="14"
                       Foreground="White" PreviewMouseLeftButtonDown="ChangeTimeLeft"
                       VerticalAlignment="Top" MinHeight="29" Height="29" Width="Auto"
                       HorizontalContentAlignment="Center" />
            </Grid>
            <Grid HorizontalAlignment="Left" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Path Grid.Column="0" Data="{StaticResource Svg.Sword}" HorizontalAlignment="Center"
                      VerticalAlignment="Center" Stretch="Uniform" Margin="5,0,0,0" Fill="#5fff" Height="16" />

                <Label Focusable="False" x:Name="PartyDps" HorizontalAlignment="Left" Grid.Column="1" FontSize="14"
                       Foreground="White"
                       VerticalAlignment="Top" MinHeight="29" Height="29" Width="Auto"
                       HorizontalContentAlignment="Center" />
            </Grid>
            <Grid HorizontalAlignment="Left" Grid.Column="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Path Grid.Column="0" Data="{StaticResource Svg.HeartHalfFull}" HorizontalAlignment="Center"
                      VerticalAlignment="Center" Stretch="Uniform" Margin="5,0,0,0" Fill="#5fff" Height="16" />
                <Label Focusable="False" x:Name="TotalDamage" HorizontalAlignment="Left" Grid.Column="1" FontSize="14"
                       Foreground="White"
                       VerticalAlignment="Top" MinHeight="29" Height="29" Width="Auto"
                       HorizontalContentAlignment="Center" />
            </Grid>
            <Path Grid.ColumnSpan="3" Margin="5" HorizontalAlignment="Right" Width="16" Height="16" Stretch="Uniform"
                  x:Name="QueuedPacketsLed" Fill="Transparent"
                  ToolTip="Overload. When red, notification functions will be temporarily disabled"
                  Data="{StaticResource Svg.Warning}" />
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding HideGeneralData}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
        </Grid>
        <ScrollViewer x:Name="Scroller" Grid.Row="2" VerticalScrollBarVisibility="Auto">
            <ItemsControl Name="Players" Background="Transparent" BorderThickness="0" Focusable="False"
                          IsTextSearchEnabled="False"
                          HorizontalAlignment="Stretch" Grid.IsSharedSizeScope="True" />
        </ScrollViewer>
        <TextBlock Grid.Row="3" Margin="5" HorizontalAlignment="Stretch" TextWrapping="Wrap" TextAlignment="Center"
                   Name="TooSlow"
                   Background="Transparent" Foreground="Yellow"
                   Text="{x:Static l:LP.Your_computer_is_too_slow}">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Paused}" Value="True" />
                                <Condition Binding="{Binding UserPaused}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>

        </TextBlock>
        <TextBlock Grid.Row="3" Margin="5" HorizontalAlignment="Stretch" TextWrapping="Wrap" TextAlignment="Center"
                   Name="WaitingMapChange"
                   Background="Transparent" Foreground="#f55" Text="{x:Static l:LP.WaitingMapChange}"
                   FontWeight="DemiBold">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding WaitingMapChangeTBVisibile}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>

        </TextBlock>
        <TextBlock Grid.Row="3" Margin="5" HorizontalAlignment="Stretch" TextWrapping="Wrap" TextAlignment="Center"
                   Name="UserPaused"
                   Background="Transparent">
            <TextBlock.Style>
                <Style TargetType="TextBlock">
                    <Setter Property="Visibility" Value="Collapsed" />
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding UserPaused}" Value="True">
                            <Setter Property="Visibility" Value="Visible" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBlock.Style>
            <Run Text="{x:Static l:LP.UserPaused}" Foreground="#aaa" />
            <LineBreak />
            <Run FontWeight="DemiBold" Foreground="#f55" Text="Change map or relog after resuming meter" />
        </TextBlock>
        <controls:RealtimeGraph Grid.Row="4" x:Name="Graph" Margin="-3 1 0 1"
                                MouseEnter="OnGraphMouseEnter"
                                MouseLeave="OnGraphMouseLeave"
                                DataContext="{Binding GraphViewModel, RelativeSource={RelativeSource AncestorType=ui:MainWindow}}" />
        <UniformGrid Rows="1" Grid.Row="5" Name="Footer" Height="0" Margin="-3 0 -5 0" >
            <!--<Grid.ColumnDefinitions>
                <ColumnDefinition Width="0" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>-->

            <!--Blur button-->
            <ToggleButton x:Name="HideNames"
                          ToolTip="{x:Static l:LP.Blur_player_names}"
                          HorizontalAlignment="Center" 
                          Style="{StaticResource ToggleButtonStyle}"
                          IsChecked="{Binding BlurPlayerNames}"
                          VerticalAlignment="Stretch"
                          Height="25"
                          Margin="3">
                <Path Style="{StaticResource PathBaseStyle}"
                      Data="{StaticResource Svg.HideNames}"
                      Margin="6" />
            </ToggleButton>

            <!--Adds button-->
            <windows:FooterButton
                Height="25"
                Margin="3"

                Command="{Binding ToggleAddsCommand}"
                x:Name="Chrono"
                Grid.Column="3">
                <windows:FooterButton.Style>
                    <Style BasedOn="{StaticResource ButtonMainStyle}" TargetType="windows:FooterButton">
                        <Setter Property="ToolTip" Value="{x:Static l:LP.MainWindow_Only_boss}" />
                        <Setter Property="SvgIcon" Value="{StaticResource Svg.OnlyBoss}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShowAdds}" Value="True">
                                <Setter Property="ToolTip" Value="{x:Static l:LP.MainWindow_Boss_Adds}" />
                                <Setter Property="SvgIcon" Value="{StaticResource Svg.ShowAdds}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </windows:FooterButton.Style>
            </windows:FooterButton>

            <!--Settings button-->
            <!--<windows:FooterButton  x:Name="Config"
                PreviewMouseLeftButtonDown="Config_MouseLeftButtonDown"
                VerticalAlignment="Stretch"
                SvgIcon="{StaticResource Svg.Settings}"
                 Grid.Column="4">
                <Button.ContextMenu>
                    <ContextMenu Style="{DynamicResource ShinraContext}" x:Name="PopupMenu">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" x:Name="History" PreviewMouseLeftButtonDown="ShowHistory"
                                   Stretch="Fill"
                                   HorizontalAlignment="Left"
                                   Height="29" VerticalAlignment="Top" Width="29" />
                            <Label Grid.Column="1" PreviewMouseLeftButtonDown="ShowHistory"
                                   Content="{Binding Source={x:Static l:LP.SystemTray_Site_export}}" Foreground="White"
                                   FontSize="14" />
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Image Grid.Column="0" x:Name="BossGageImg" PreviewMouseLeftButtonDown="ShowBossGage"
                                   Stretch="Fill"
                                   HorizontalAlignment="Left"
                                   Height="29" VerticalAlignment="Top" Width="29" />
                            <Label Grid.Column="1" PreviewMouseLeftButtonDown="ShowBossGage"
                                   Content="{Binding Source={x:Static l:LP.ShowBossGage}}" Foreground="White"
                                   FontSize="14" />
                        </Grid>
                    </ContextMenu>
                </Button.ContextMenu>
            </windows:FooterButton>-->

            <!--Stats button-->
            <windows:FooterButton x:Name="EntityStatsImage"
                                  Command="{Binding ShowEntityStatsCommand}"
                                  Height="25"
                                  Margin="3"
                                  Style="{StaticResource ButtonMainStyle}"
                                  SvgIcon="{StaticResource Svg.EntityStats}" />
            <windows:FooterButton Command="{Binding ShowUploadHistoryCommand}"
                                  Margin="3"
                                  Height="25"
                                  ToolTip="{x:Static l:LP.SystemTray_Site_export}"
                                  Style="{StaticResource ButtonMainStyle}"
                                  SvgIcon="{StaticResource Svg.History}" />
            <windows:FooterButton Command="{Binding ShowBossHPBarCommand}"
                                  ToolTip="{x:Static l:LP.BossHP}"
                                  Margin="3"
                                  Height="25"
                                  Style="{StaticResource ButtonMainStyle}"
                                  SvgIcon="{StaticResource Svg.HPBar}" >
            </windows:FooterButton>

            <!--Pause button-->
            <windows:FooterButton Command="{Binding TogglePauseCommand}"
                                  Margin="3"
                                  VerticalAlignment="Stretch" x:Name="UserPauseBtn"
                                  Height="25">
                <windows:FooterButton.Style>
                    <Style BasedOn="{StaticResource ButtonMainStyle}" TargetType="windows:FooterButton">
                        <Setter Property="SvgIcon" Value="{StaticResource Svg.Pause}" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding UserPaused}" Value="True">
                                <Setter Property="SvgIcon" Value="{StaticResource Svg.Play}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </windows:FooterButton.Style>
            </windows:FooterButton>

            <windows:FooterButton 
                Background="Transparent"
                Height="25"
                Width="25"
                Grid.Column="1"
                Margin="3"
                Command="{Binding VerifyCloseCommand}"
                CommandParameter="False"
                Style="{StaticResource ButtonMainStyle}"
                >

                <Path
                    Stretch="Uniform"
                    Data="{StaticResource Svg.Power}"
                    Fill="#ff55"
                    Margin="3" />
            </windows:FooterButton>

        </UniformGrid>
        <!--<ui:NotifyIcon x:Name="NotifyIcon" />-->
    </Grid>
</ui:ClickThrouWindow>